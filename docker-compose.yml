version: '3'

# The only exposed service here is the actual app.
# It's your call if you want to expose the other services to the host. However, make sure to use actual
# env variables here if you choose to map the port to the host!!


services:
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: gamenode
      MYSQL_PASSWORD: gamenode
      MYSQL_DATABASE: gamenode

    ports:
      - "3306:3306"
    networks:
      - app_network
    restart: no
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-mysql:7.0
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3567:3567"

    environment:
      MYSQL_CONNECTION_URI: mysql://gamenode:gamenode@db:3306/gamenode
      # SUPERTOKENS_HOST: db
    networks:
      - app_network
    restart: no

    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'

    restart: no

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

    volumes:
      - redis:/data

    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  redis:
  db:

