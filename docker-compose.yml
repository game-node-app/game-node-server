version: '3'


services:
  db:
    image: mysql:8.3
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: gamenode
      MYSQL_PASSWORD: gamenode
      MYSQL_DATABASE: gamenode

    ports:
      - "3306:3306"

    restart: no
    volumes:
      - db:/var/lib/mysql

    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10


  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-mysql:9.1.1
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3567:3567"

    environment:
      MYSQL_CONNECTION_URI: mysql://gamenode:gamenode@db:3306/gamenode


    restart: no

    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'

    restart: no

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

    volumes:
      - redis:/data


  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      # These will be available at your localhost:
      - "5672:5672"
      - "25672:25672" # (erlang) communication between the nodes and CLI tool
      - "15672:15672" # communication with the web management API

    volumes:
      - rabbitmq:/var/lib/rabbitmq/

    environment:
      RABBITMQ_DEFAULT_USER: gamenode
      RABBITMQ_DEFAULT_PASS: gamenode

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  redis:
  db:
  manticore:
  rabbitmq:

