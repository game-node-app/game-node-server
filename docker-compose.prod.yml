version: '3'

services:
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: gamenode

    networks:
      - game_node_app
    restart: always
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  redis:
    image: redis:latest
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'

    restart: always

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

    volumes:
      - redis:/var/lib/redis

    networks:
      - game_node_app

  server:
    image: lamarcke/game-node-server:latest

    # Most of the env vars are loaded directly from .env, we only need to override some to make sure
    # the docker resources are accessible.
    environment:
      REDIS_URL: redis://redis:6379
      SUPERTOKENS_CORE_URI: http://@supertokens:3567
      SERVER_PORT: 5000
      DOMAIN_API: https://server.gamenode.app
      DOMAIN_WEBSITE: https://gamenode.app
      DB_HOST: db
      DB_DATABASE: gamenode
      DB_PASS: ${DB_PASS}
      DB_USER: ${DB_USER}
      DB_PORT: 3306
      RABBITMQ_URI: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      PROVIDER_GOOGLE_CLIENT_ID: ${PROVIDER_GOOGLE_CLIENT_ID}
      PROVIDER_GOOGLE_CLIENT_SECRET: ${PROVIDER_GOOGLE_CLIENT_SECRET}
      PROVIDER_DISCORD_CLIENT_ID: ${PROVIDER_DISCORD_CLIENT_ID}
      PROVIDER_DISCORD_CLIENT_SECRET: ${PROVIDER_DISCORD_CLIENT_SECRET}

    healthcheck:
      test: [ "CMD-SHELL", "yarn run healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3

    restart: always

    deploy:
      replicas: 3

    volumes:
      - gamenode:/app/public/uploads

    command: ["yarn", "start:prod"]

    networks:
      - game_node_app

networks:
  game_node_app:
    external: true

volumes:
  redis:
  db:
  gamenode:

