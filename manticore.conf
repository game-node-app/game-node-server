common {
    plugin_dir = /usr/local/lib/manticore
}

searchd {
    listen = 127.0.0.1:9312
    listen = 127.0.0.1:9306:mysql
    listen = 127.0.0.1:9308:http
    log = /var/log/manticore/searchd.log
    query_log = /var/log/manticore/query.log
    pid_file = /var/run/manticore/searchd.pid
    query_log_format = sphinxql
}

source gamenodesource {
  type             = mysql
  # Change this to the database name in docker-compose.yml, if needed.
  sql_host         = db
  sql_user         = gamenode
  sql_pass         = gamenode
  sql_db           = gamenode
# sql_query_range  = SELECT MIN(ID), MAX(ID) FROM x
  sql_query_range = SELECT MIN(game.id), MAX(game.id) FROM game
  sql_query       = SELECT game.id, game.name, game.slug, game.aggregatedRating, game.aggregatedRatingCount, game.category, game.status, game.summary, game.checksum, game.url, game.firstReleaseDate, game.createdAt, game.updatedAt, gameCover.url AS coverUrl, gameStatistics.numViews, gameStatistics.numLikes, gamePlatform.platform FROM game LEFT JOIN gamenode.game_cover AS gameCover on game.id = gameCover.gameId LEFT JOIN (SELECT gs.id, gs.gameId, count(uv.id) numViews, count(ul.id) numLikes FROM game_statistics AS gs LEFT JOIN user_view uv ON gs.id = uv.gameStatisticsId LEFT JOIN user_like ul ON gs.id = ul.gameStatisticsId GROUP BY gs.id, gs.gameId) AS gameStatistics ON game.id = gameStatistics.gameId LEFT JOIN (SELECT gpgg.gameId, GROUP_CONCAT(DISTINCT platformName SEPARATOR ', ') platform FROM (SELECT id, game_platform.abbreviation platformName FROM game_platform UNION SELECT id, game_platform.name platformName FROM game_platform) platformAll INNER JOIN game_platform_games_game gpgg ON gpgg.gamePlatformId = platformAll.id GROUP BY gpgg.gameId) AS gamePlatform ON game.id = gamePlatform.gameId WHERE game.id > $start AND game.id < $end;
 }

index gamenode {
  dict = keywords
  type = plain
  source = gamenodesource
  path = /var/lib/manticore/gamenode
 }
